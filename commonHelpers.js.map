{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from \"axios\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst form = document.querySelector(\".form\");\nconst gallery = document.querySelector(\".gallery\");\nconst loader = document.querySelector(\".loader\");\n\nform.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n    showLoader();\n\n    const q = event.currentTarget.elements.search.value.trim();\n   \n    if (q.length === 0) {\n        showErrorToast(\"Sorry, there are no images matching your search query. Please try again!Reqest is not ok\");\n        hideLoader();\n    } else {\n        try {\n            const images = await getIMG(q);\n            renderIMG(images);\n        } catch (error) {\n            console.error(error);\n            showErrorToast(\"Sorry, there are no images matching your search query. Please try again!Reqest is not ok\");\n        } finally {\n            hideLoader();\n        }\n    }\n});\n\nasync function getIMG(query = \"\") {\n    const instance = axios.create({\n        baseURL: 'https://pixabay.com/api/',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        params: {\n            key: \"41729431-93e496ed3cd794296b45db789\",\n            q: query,\n            image_type: \"photo\",\n            orientation: \"horizontal\",\n            safesearch: \"true\"\n        }\n    });\n\n    try {\n        const response = await instance.get();\n        return response.data\n    } catch (error) {\n        console.error(\"Опять шось не то\");\n        // showErrorToast();\n    }\n\n    const data = await response.json();\n    \n    if (data.hits.length) {\n        return data.hits;\n    } else {\n        showErrorToast(\"Sorry, there are no images matching your search query. Please try again!Reqest is not ok\");\n        hideLoader();\n        return [];\n    }\n}\n\nconst getImageHTML = ({largeImageURL, webformatURL, tags, likes, views, comments, downloads}) => `           \n    <li class=\"gallery-item\">\n        <div class=gallery-card>\n            <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" width:\"360\" height:\"200\" />\n            </a>\n\n            <ul class=\"gallery-card-list\">\n                <li class=\"gallery-card-item\">\n                    <h2 class=\"gallery-card-title\">Likes</h2>\n                    <p class=\"gallery-card-information\">${likes}</p>\n                </li>\n                <li class=\"gallery-card-item\">\n                    <h2 class=\"gallery-card-title\">Views</h2>\n                    <p class=\"gallery-card-information\">${views}</p>\n                </li>\n                <li class=\"gallery-card-item\">\n                    <h2 class=\"gallery-card-title\">Comments</h2>\n                    <p class=\"gallery-card-information\">${comments}</p>\n                </li>\n                <li class=\"gallery-card-item\">\n                    <h2 class=\"gallery-card-title\">Downloads</h2>\n                    <p class=\"gallery-card-information\">${downloads}</p>\n                </li>\n            </ul>\n        </div>\n    </li>\n`\n\nconst lightbox = new SimpleLightbox('.gallery a', { captionsData: 'alt', captionDelay: 250 });\n\nfunction renderIMG(images) {\n    gallery.innerHTML = \"\";\n        if (images === undefined) {\n            return;\n        } else {\n            const markup = images.map(image => getImageHTML(image)).join(\"\");\n            gallery.insertAdjacentHTML(\"beforeend\", markup);\n            lightbox.refresh();         \n            hideLoader();\n        }\n}\n\nfunction showErrorToast(message) {\n    iziToast.show({\n        title: message,\n        titleColor: 'white',\n        color: 'white',\n        backgroundColor: 'red',\n        position: 'topRight',\n    });\n}\n\nfunction showLoader() {\n    loader.classList.add('loading');\n}\n\nfunction hideLoader() {\n    loader.classList.remove('loading');\n}"],"names":["form","gallery","loader","event","showLoader","q","showErrorToast","hideLoader","images","getIMG","renderIMG","error","query","instance","axios","data","getImageHTML","largeImageURL","webformatURL","tags","likes","views","comments","downloads","lightbox","SimpleLightbox","markup","image","message","iziToast"],"mappings":"owBAMA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAE/CF,EAAK,iBAAiB,SAAU,MAAOG,GAAU,CAC7CA,EAAM,eAAc,EACpBC,IAEA,MAAMC,EAAIF,EAAM,cAAc,SAAS,OAAO,MAAM,OAEpD,GAAIE,EAAE,SAAW,EACbC,EAAe,0FAA0F,EACzGC,QAEA,IAAI,CACA,MAAMC,EAAS,MAAMC,EAAOJ,CAAC,EAC7BK,EAAUF,CAAM,CACnB,OAAQG,EAAP,CACE,QAAQ,MAAMA,CAAK,EACnBL,EAAe,0FAA0F,CACrH,QAAkB,CACNC,GACH,CAET,CAAC,EAED,eAAeE,EAAOG,EAAQ,GAAI,CAC9B,MAAMC,EAAWC,EAAM,OAAO,CAC1B,QAAS,2BACT,QAAS,CACL,eAAgB,kBACnB,EACD,OAAQ,CACJ,IAAK,qCACL,EAAGF,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MACf,CACT,CAAK,EAED,GAAI,CAEA,OADiB,MAAMC,EAAS,OAChB,IACnB,MAAC,CACE,QAAQ,MAAM,kBAAkB,CAEnC,CAED,MAAME,EAAO,MAAM,SAAS,OAE5B,OAAIA,EAAK,KAAK,OACHA,EAAK,MAEZT,EAAe,0FAA0F,EACzGC,IACO,GAEf,CAEA,MAAMS,EAAe,CAAC,CAAC,cAAAC,EAAe,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAM;AAAA;AAAA;AAAA,4CAGrDN;AAAA,kDACMC,WAAsBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAMdC;AAAA;AAAA;AAAA;AAAA,0DAIAC;AAAA;AAAA;AAAA;AAAA,0DAIAC;AAAA;AAAA;AAAA;AAAA,0DAIAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpDC,EAAW,IAAIC,EAAe,aAAc,CAAE,aAAc,MAAO,aAAc,GAAG,CAAE,EAE5F,SAASf,EAAUF,EAAQ,CAEnB,GADJP,EAAQ,UAAY,GACZO,IAAW,OAER,CACH,MAAMkB,EAASlB,EAAO,IAAImB,GAASX,EAAaW,CAAK,CAAC,EAAE,KAAK,EAAE,EAC/D1B,EAAQ,mBAAmB,YAAayB,CAAM,EAC9CF,EAAS,QAAO,EAChBjB,GACH,CACT,CAEA,SAASD,EAAesB,EAAS,CAC7BC,EAAS,KAAK,CACV,MAAOD,EACP,WAAY,QACZ,MAAO,QACP,gBAAiB,MACjB,SAAU,UAClB,CAAK,CACL,CAEA,SAASxB,GAAa,CAClBF,EAAO,UAAU,IAAI,SAAS,CAClC,CAEA,SAASK,GAAa,CAClBL,EAAO,UAAU,OAAO,SAAS,CACrC"}